<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFrameworks>net8.0;net6.0</TargetFrameworks>
    <TreatWarningsAsErrors>true</TreatWarningsAsErrors>
    <GeneratePackageOnBuild>True</GeneratePackageOnBuild>
    <PackageId>Levenshtypo</PackageId>
    <Title>Levenshtypo</Title>
  </PropertyGroup>
  
  <PropertyGroup>
    <Authors>Andrew J Said</Authors>
    <LangVersion>12</LangVersion>
    <Nullable>enable</Nullable>
    <Description>
      Levenshtypo allows you to search large data sets by fuzzy matching the key strings.

      The dataset is loaded into a [Trie](https://en.wikipedia.org/wiki/Trie) which
      searches for keys based on a similarity metric from a given query string.
      This is akin to a `Dictionary&lt;string, TValue&gt;` which supports a fuzzy `string` key.

      Levenshtypo supports [Levenshtein Distance](https://en.wikipedia.org/wiki/Levenshtein_distance)
      which is the number of character insertions, deletions or substitutions required
      to transform one string into another. [Restricted Edit Distance](https://en.wikipedia.org/wiki/Damerau%E2%80%93Levenshtein_distance)
      is also supported which adds transposition of adjacent letters as a possible
      transformation.

      The library also exposes the underlying [Levenshtein Automaton](https://en.wikipedia.org/wiki/Levenshtein_automaton)
      which can be used independently of the Trie. Given a string K and a distance N, the
      automaton factory can generate a highly optimized predicate (yes/no) function which
      is able to test whether a string is within N edit operations from string K. Creating
      the automaton upfront and testing against a set of strings will be multiple times
      faster than individually computing the distance between K and each string.
    </Description>
    <Copyright>MIT</Copyright>
    <PackageProjectUrl>https://github.com/andrewjsaid/levenshtypo</PackageProjectUrl>
    <PackageReadmeFile>README.md</PackageReadmeFile>
    <RepositoryUrl>https://github.com/andrewjsaid/levenshtypo</RepositoryUrl>
    <PackageTags>levenshtein;string matching;fuzzy string matching;trie;fuzzy trie;levenshtein distance;levenshtein automata</PackageTags>
    <PackageLicenseFile>LICENSE</PackageLicenseFile>
    <PackageIcon>logo.png</PackageIcon>
    <Company>Andrew J Said</Company>
    <Version>1.4.0</Version>
    <Product>Levenshtypo</Product>
  </PropertyGroup>

  <PropertyGroup Condition="'$(TargetFramework)' == 'net8.0'">
    <IsAotCompatible>True</IsAotCompatible>
  </PropertyGroup>

  <ItemGroup>
    <InternalsVisibleTo Include="Levenshtypo.Benchmarks" />
    <InternalsVisibleTo Include="Levenshtypo.Tests" />
    <InternalsVisibleTo Include="Levenshtypo.Generator" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.CodeAnalysis.PublicApiAnalyzers" Version="3.3.4">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
  </ItemGroup>

  <ItemGroup>
    <None Include="..\..\images\logo.png">
      <Pack>True</Pack>
      <PackagePath>\</PackagePath>
    </None>
    <None Include="..\..\LICENSE">
      <Pack>True</Pack>
      <PackagePath>\</PackagePath>
    </None>
    <None Include="..\..\README.md">
      <Pack>True</Pack>
      <PackagePath>\</PackagePath>
    </None>
  </ItemGroup>
  
</Project>
